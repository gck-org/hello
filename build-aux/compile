#!/bin/sh
#   gck.compile - Compile wrapper for GCK distributions
#
#    COMPILATION (Linux - POSIX):
#        ./compile
#
#
#   LICENSE: BSD-3-Clause
#
#   Copyright (c) 2025 GCK
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

me=$0
scriptversion="1.0.0"

version="make $scriptversion

Copyright (C) 2025 GCK.

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law."

usage="\
Usage: $me [OPTION]...
Compile wrapper for GCK distributions

Options:
   -R         force re-compile everything

   --help     print this help and exit
   --version  output version information

Automatically passes arugments to 'configure'"

rebuild=

while test $# -gt 0; do
  case $1 in
    --help) echo "$usage"; exit 0;;
    --version) echo "$version"; exit 0;;
    -R) rebuild=true ;;
    -*)
     echo "$0: Unknown option '$1'." >&2
     echo "$0: Try '--help' for more information." >&2
     exit 1;;
  esac
  shift
done

if [ -f ./config.mak ] && [ -z "$rebuild" ]; then
   echo "$0: reusing old 'config.mak'"
else
if [ ! -x ./configure ]; then
    echo "$0: 'configure' not found or not executable" >&2
    exit 1
fi

echo "$0: configuring $(basename "$(git rev-parse --show-toplevel)")"
./configure "$@"
if [ $? -ne 0 ]; then
    echo "error: configure failed" >&2
    exit 1
fi

fi

echo "$0: starting build"
make -j"$(nproc)"
if [ $? -ne 0 ]; then
    echo "error: build failed" >&2
    exit 1
fi

echo "$0: finish"

# End: compile
